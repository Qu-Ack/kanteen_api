// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: otp.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createOTP = `-- name: CreateOTP :one
insert into otp (id, mobile, otp) values ($1, $2, $3) RETURNING id, mobile, otp
`

type CreateOTPParams struct {
	ID     uuid.UUID
	Mobile string
	Otp    string
}

func (q *Queries) CreateOTP(ctx context.Context, arg CreateOTPParams) (Otp, error) {
	row := q.db.QueryRowContext(ctx, createOTP, arg.ID, arg.Mobile, arg.Otp)
	var i Otp
	err := row.Scan(&i.ID, &i.Mobile, &i.Otp)
	return i, err
}

const deleteOTP = `-- name: DeleteOTP :exec
delete from otp where id = $1
`

func (q *Queries) DeleteOTP(ctx context.Context, id uuid.UUID) error {
	_, err := q.db.ExecContext(ctx, deleteOTP, id)
	return err
}

const getOTP = `-- name: GetOTP :one
select id, mobile, otp from otp where id = $1
`

func (q *Queries) GetOTP(ctx context.Context, id uuid.UUID) (Otp, error) {
	row := q.db.QueryRowContext(ctx, getOTP, id)
	var i Otp
	err := row.Scan(&i.ID, &i.Mobile, &i.Otp)
	return i, err
}
